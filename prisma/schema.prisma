// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  password      String
  name          String?
  emailVerified DateTime?
  image         String?
  role          String    @default("USER")
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model News {
  id           String   @id @default(cuid())
  thumbnailUrl String
  title        String
  content      String
  slug         String   @unique @default("news-slug")
  status       String   @default("published")
  date         DateTime @default(now())
}

model Game {
  id                String         @id @default(cuid())
  name              String
  thumbnailUrl      String
  description       String
  gameBackgroundUrl String
  gameGifUrl        String
  gameType          String
  RTP               Float
  genre             String
  volatility        String
  maxWin            Float
  placeHolderUrl    String
  popularRank       Int
  releaseDate       String
  status            String         @default("published")
  slug              String         @unique @default("game-slug")
  languageInfo      LanguageInfo[]
  tags              Tag[]
  targetMarkets     TargetMarket[]
  targetCountriesByIP TargetCountryByIP[]
}

model Tag {
  id     String @id @default(cuid())
  name   String
  gameId String
  game   Game   @relation(fields: [gameId], references: [id], onDelete: Cascade)

  @@index([gameId])
}

model LanguageInfo {
  id          String @id @default(cuid())
  gameId      String
  language    String
  trailerLink String
  demoLink    String
  game        Game   @relation(fields: [gameId], references: [id], onDelete: Cascade)

  @@index([gameId])
}

model TargetMarket {
  id      String @id @default(cuid())
  market  String
  gameId  String
  game    Game   @relation(fields: [gameId], references: [id], onDelete: Cascade)

  @@index([gameId])
}

model TargetCountryByIP {
  id       String @id @default(cuid())
  country  String
  gameId   String
  game     Game   @relation(fields: [gameId], references: [id], onDelete: Cascade)

  @@index([gameId])
}

